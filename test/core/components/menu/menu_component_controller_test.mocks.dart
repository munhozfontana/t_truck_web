// Mocks generated by Mockito 5.0.11 from annotations
// in t_truck_web/test/core/components/menu/menu_component_controller_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:t_truck_web/core/adapters/protocols/i_logged_user.dart' as _i2;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

/// A class which mocks [ILoggedUser].
///
/// See the documentation for Mockito's code generation for more information.
class MockILoggedUser extends _i1.Mock implements _i2.ILoggedUser {
  MockILoggedUser() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<String> get login => (super.noSuchMethod(Invocation.getter(#login),
      returnValue: Future<String>.value('')) as _i3.Future<String>);
  @override
  _i3.Future<String> get token => (super.noSuchMethod(Invocation.getter(#token),
      returnValue: Future<String>.value('')) as _i3.Future<String>);
  @override
  _i3.Future<void> saveToken(String? token) =>
      (super.noSuchMethod(Invocation.method(#saveToken, [token]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i3.Future<void>);
  @override
  _i3.Future<bool> loginExpired() =>
      (super.noSuchMethod(Invocation.method(#loginExpired, []),
          returnValue: Future<bool>.value(false)) as _i3.Future<bool>);
  @override
  void logout() => super.noSuchMethod(Invocation.method(#logout, []),
      returnValueForMissingStub: null);
}
